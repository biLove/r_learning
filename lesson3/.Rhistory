aggregate(pf$friendships_initiated, list(pf$gender), mean)
aggregate(pf$friendships_initiated, list(pf$gender), median)
summary(pf$friendships_initiated)
aggregate(pf$friendships_initiated, list(pf$gender), mean)
aggregate(pf$friendships_initiated, list(pf$gender), median)
summary(pf$friendships_initiated,list(pf$gender))
aggregate(pf$friendships_initiated, list(pf$gender), mean)
aggregate(pf$friendships_initiated, list(pf$gender), median)
summary(pf$friendships_initiated, list(pf$gender))
aggregate(pf$friendships_initiated, list(pf$gender), mean)
aggregate(pf$friendships_initiated, list(pf$gender), median)
summary(pf$friendships_initiated)
summary(pf$mobile_likes > 0)
mobile_check_in < -NA
aggregate(pf$friendships_initiated, list(pf$gender), mean)
aggregate(pf$friendships_initiated, list(pf$gender), median)
summary(pf$friendships_initiated)
summary(pf$mobile_likes > 0)
mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0,1,0)
aggregate(pf$friendships_initiated, list(pf$gender), mean)
aggregate(pf$friendships_initiated, list(pf$gender), median)
summary(pf$friendships_initiated)
summary(pf$mobile_likes > 0)
mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
aggregate(pf$friendships_initiated, list(pf$gender), mean)
aggregate(pf$friendships_initiated, list(pf$gender), median)
summary(pf$friendships_initiated)
summary(pf$mobile_likes > 0)
mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
b <- 63947*1.0/(63947 + 35056)
aggregate(pf$friendships_initiated, list(pf$gender), mean)
aggregate(pf$friendships_initiated, list(pf$gender), median)
summary(pf$friendships_initiated)
summary(pf$mobile_likes > 0)
mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
sum(pf$mobile_check_in == 1)/length(pf$mobile_check_in)
getwd()
library(ggplot2)  #必须先加载ggplot包
data("diamonds") # 加载钻石数据集，ggplot包自带该数据集
library(ggplot2)  #必须先加载ggplot包
data("diamonds") # 加载钻石数据集，ggplot包自带该数据集
library(ggplot2)  #必须先加载ggplot包
data("diamonds") # 加载钻石数据集，ggplot包自带该数据集
summary(diamonds)
data(DATA_SET_NAME)
?diamonds
?diamonds
qplot(x = price, y = diamonds)
qplot(x = price, data = diamonds)
qplot(x = price, data = diamonds)
summary(diamonds)
qplot(x = price, data = diamonds)
summary(diamonds$price)
length(diamonds$price < 500)
sum(diamonds$price < 500)
sum(diamonds$price < 500)
sum(diamonds$price < 250)
sum(diamonds$price >= 15000)
qplot(x = friend_count, data = pf) + scale_x_continuous(limits = c(0, 1000))
library(ggplot2)
qplot(x = friend_count, data = pf) + scale_x_continuous(limits = c(0, 1000))
getwd()    ##查看目录
list.files()  ## 查看目录下面所有的文件
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')   ## 读取数据
names(pf)   ##查看数据里面的变量
install.packages('ggplot2')
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(x = friend_count, data = pf) + scale_x_continuous(limits = c(0, 1000))
qplot(x = price, data = diamonds)
ggsave('priceHistogram.png')
summary(diamonds$price)  #计算price的统计数据
qplot(x = friend_count, data = pf, binwidth = 250) + scale_x_continuous(limits = c(0, 1000), breaks = seq())
qplot(x = friend_count, data = pf, binwidth = 250) + scale_x_continuous(limits = c(0, 10000), breaks = seq())
qplot(x = friend_count, data = pf, binwidth = 25) + scale_x_continuous(limits = c(0, 5000), breaks = seq())
qplot(x = friend_count, data = pf, binwidth = 25) + scale_x_continuous(limits = c(0, 5000), breaks = seq(0,5000,100))
qplot(x = friend_count, data = pf, binwidth = 25) + scale_x_continuous(limits = c(0, 5000), breaks = seq(0,5000,1000))
qplot(x = friend_count, data = pf, binwidth = 25) + scale_x_continuous(limits = c(0, 2000), breaks = seq(0,2000,1000))
qplot(x = friend_count, data = pf, binwidth = 25) + scale_x_continuous(limits = c(0, 2000), breaks = seq(0,2000,50))
qplot(x = friend_count, data = pf, binwidth = 25) + scale_x_continuous(limits = c(0, 2000), breaks = seq(0,2000,200))
qplot(x = friend_count, data = pf, binwidth = 25) + scale_x_continuous(limits = c(0, 1200), breaks = seq(0,1200,200))
qplot(x = friend_count, data = pf, binwidth = 20) + scale_x_continuous(limits = c(0, 1200), breaks = seq(0,1200,200))
qplot(x = friend_count, data = pf, binwidth = 20) + scale_x_continuous(limits = c(0, 600), breaks = seq(0,600,200))
qplot(x = friend_count, data = pf, binwidth = 20) + scale_x_continuous(limits = c(0, 2000), breaks = seq(0,600,200))
qplot(x = friend_count, data = pf, binwidth = 20) + scale_x_continuous(limits = c(0, 2000), breaks = seq(0,2000,200))
qplot(x = friend_count, data = pf, binwidth = 20) + scale_x_continuous(limits = c(0, 1000), breaks = seq(0,1000,200))
qplot(x = price, data = diamonds, binwidth = 20) + scale_x_continuous(limits = c(0, 1000), breaks = seq(0,1000,200))
qplot(x = price, data = diamonds, binwidth = 20) + scale_x_continuous(limits = c(0, 5000), breaks = seq(0,1000,200))
qplot(x = price, data = diamonds, binwidth = 100) + scale_x_continuous(limits = c(0, 10000), breaks = seq(0,10000,200))
qplot(x = price, data = diamonds, binwidth = 100) + scale_x_continuous(limits = c(0, 10000), breaks = seq(0,10000,1000))
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('好友数量') +
ylab('Percentage of users with that friend count')
qplot(x = price, data = subset(pf, !is.na(cut)))
qplot(x = price, data = diamonds, binwidth = 100) + scale_x_continuous(limits = c(0, 10000), breaks = seq(diamonds$cut))
qplot(x = dob_day, data = pf) + scale_x_continuous(breaks = 1:31) + facet_wrap(~dob_month, ncol = 3)
qplot(x = price, data = diamonds) + scale_x_continuous(breaks = seq(0,10000,100)) + facet_wrap(~cut, ncol = 3)
qplot(x = price, data = diamonds) + facet_wrap(~cut, ncol = 3)
qplot(x = price, data = diamonds,binwidth = 10) + facet_wrap(~cut, ncol = 3)
qplot(x = price, data = diamonds,binwidth = 100) + facet_wrap(~cut, ncol = 3)
qplot(x = price, data = diamonds,binwidth = 1000) + facet_wrap(~cut, ncol = 3)
qplot(x = price, data = diamonds,binwidth = 500) + facet_wrap(~cut, ncol = 3)
qplot(x = price, data = diamonds,binwidth = 500) + facet_wrap(~cut, ncol = 3)
summary(diamonds$price)+facet_wrap(~cut)
# method 1
aggregate(pf$www_likes, by=list(gender = pf$gender), FUN = sum)
# method 2
by(pf$www_likes, pf$gender, sum)
qplot(x = price, data = diamonds,binwidth = 500) + facet_wrap(~cut, ncol = 3)
by(diamonds$price, diamonds$cut, max)
by(diamonds$price, diamonds$cut, max)
by(diamonds$price, diamonds$cut, min)
by(diamonds$price, diamonds$cut, max)
by(diamonds$price, diamonds$cut, median)
by(diamonds$price, diamonds$cut, max)
by(diamonds$price, diamonds$cut, median)
by(diamonds$price, diamonds$cut, max)
by(diamonds$price, diamonds$cut, summary)
qplot(x = price, data = diamonds,binwidth = 500) + facet_wrap(~cut, ncol = 1)
qplot(x = price, data = diamonds,binwidth = 500) + facet_wrap(~cut, ncol = 3)
qplot(x = price, data = diamonds,binwidth = 500) + facet_wrap(~cut, ncol = 3, scales = "free")
price_per_carat <- 0.0
price_per_carat <- diamonds$price / diamonds$carat
price_per_carat <- 0.0
diamonds$price_per_carat <- diamonds$price / diamonds$carat
## 按切工分类计算
qplot(x=price_per_carat)
price_per_carat <- 0.0
diamonds$price_per_carat <- diamonds$price / diamonds$carat
## 按切工分类计算
qplot(x=price_per_carat, data = diamonds, binwidth = 1) +
facet_wrap(~cut, ncol = 3, scales = "free") +
scale_x_log10()
price_per_carat <- 0.0
diamonds$price_per_carat <- diamonds$price / diamonds$carat
## 按切工分类计算
qplot(x=price_per_carat, data = diamonds, binwidth = 0.1) +
facet_wrap(~cut, ncol = 3, scales = "free") +
scale_x_log10()
price_per_carat <- 0.0
diamonds$price_per_carat <- diamonds$price / diamonds$carat
## 按切工分类计算
qplot(x=price_per_carat, data = diamonds, binwidth = 0.05) +
facet_wrap(~cut, ncol = 3, scales = "free") +
scale_x_log10()
qplot(x = cut, y = price,
data = subset(diamonds, !is.na(cut)),
geom = 'boxplot')
by(diamonds$price, diamonds$cut, summary)
qplot(x = cut, y = price,
data = subset(diamonds, !is.na(cut)),
geom = 'boxplot') + coord_cartesian(ylim = c(0, 7500))
by(diamonds$price, diamonds$cut, summary)
qplot(x = cut, y = price,
data = subset(diamonds, !is.na(cut)),
geom = 'boxplot')
by(diamonds$price, diamonds$cut, summary)
qplot(x = cut, y = price,
data = subset(diamonds, !is.na(cut)),
geom = 'boxplot') + coord_cartesian(ylim = c(0, 20000))
by(diamonds$price, diamonds$cut, summary)
qplot(x = cut, y = price,
data = subset(diamonds, !is.na(cut)),
geom = 'boxplot') + coord_cartesian(ylim = c(0, 10000))
by(diamonds$price, diamonds$cut, summary)
qplot(x = clarity, y = price,
data = subset(diamonds, !is.na(clarity)),
geom = 'boxplot') + coord_cartesian(ylim = c(0, 10000))
by(diamonds$price, diamonds$cut, summary)
qplot(x = clarity, y = price,
data = subset(diamonds, !is.na(clarity)),
geom = 'boxplot') + coord_cartesian(ylim = c(0, 7500))
by(diamonds$price, diamonds$cut, summary)
qplot(x = clarity, y = price,
data = subset(diamonds, !is.na(clarity)),
geom = 'boxplot') + coord_cartesian(ylim = c(0, 7500))
by(diamonds$price, diamonds$clarity, summary)
qplot(x = cut, y = price,
data = subset(diamonds, !is.na(cut)),
geom = 'boxplot') + coord_cartesian(ylim = c(0, 7500))
by(diamonds$price, diamonds$cut, summary)
qplot(x = color, y = price,
data = subset(diamonds, !is.na(color)),
geom = 'boxplot') + coord_cartesian(ylim = c(0, 7500))
by(diamonds$price, diamonds$color, summary)
qplot(x = color, y = price,
data = subset(diamonds, !is.na(color)),
geom = 'boxplot') + coord_cartesian(ylim = c(0, 10000))
by(diamonds$price, diamonds$color, summary)
qplot(x = color, y = price_per_carat,
data = subset(diamonds, !is.na(color)),
geom = 'boxplot') + coord_cartesian(ylim = c(0, 10000))
by(diamonds$price_per_carat, diamonds$color, summary)
qplot(x = color, y = price_per_carat,
data = subset(diamonds, !is.na(color)),
geom = 'boxplot') + coord_cartesian(ylim = c(0, 7500))
by(diamonds$price_per_carat, diamonds$color, summary)
ggplot(aes(x = carat, y = sum(..count..)), data = subset(diamonds, !is.na(carat))) +
geom_freqpoly(aes(color = carat), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('carat') +
ylab('count of the carat')
ggplot(aes(x = carat, y = sum(..count..)), data = subset(diamonds, !is.na(carat))) +
geom_freqpoly(aes(color = carat), binwidth=10) +
xlab('carat') +
ylab('count of the carat')
ggplot(aes(x = carat, y = sum(..count..)), data = subset(diamonds, !is.na(carat))) +
geom_freqpoly(aes(color = carat), binwidth=10) +
xlab('carat') +
ylab('count of the carat')
length(diamonds$carat)
ggplot(aes(x = carat, y = sum(..count..)), data = subset(diamonds, !is.na(carat))) +
geom_freqpoly(aes(color = carat), binwidth=10) +
xlab('carat') +
ylab('count of the carat')
diamonds$b <- 1
by(diamonds$b, diamonds$carat, sum)
diamonds$b <- 1
by(diamonds$b, diamonds$carat, sum)
ggplot(aes(x = carat, y = sum(..count..)), data = subset(diamonds, !is.na(carat))) +
geom_freqpoly(aes(color = carat), binwidth=1) +
xlab('carat') +
ylab('frequency')
diamonds$b <- 1
by(diamonds$b, diamonds$carat, sum)
diamonds$b <- 1
by(diamonds$b, diamonds$carat, sum)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=1) +
xlab('carat') +
ylab('frequency')
#diamonds$b <- 1
#by(diamonds$b, diamonds$carat, sum)
diamonds$b <- 1
by(diamonds$b, diamonds$carat, sum)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.01) +
xlab('carat') +
ylab('frequency')
#diamonds$b <- 1
#by(diamonds$b, diamonds$carat, sum)
#diamonds$b <- 1
#by(diamonds$b, diamonds$carat, sum)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.01) +
xlab('carat') +
ylab('frequency')
#diamonds$b <- 1
#by(diamonds$b, diamonds$carat, sum)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.01) +
scale_x_continuous(limits = c(0, 1.50), breaks = seq(0, 1.20, 0.01)) +
xlab('carat') +
ylab('frequency')
#diamonds$b <- 1
#by(diamonds$b, diamonds$carat, sum)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.01) +
scale_x_continuous(limits = c(0, 1.10), breaks = seq(0, 1.10, 0.02)) +
xlab('carat') +
ylab('frequency')
#diamonds$b <- 1
#by(diamonds$b, diamonds$carat, sum)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.01) +
scale_x_continuous(limits = c(0, 1.10), breaks = seq(0, 1.10, 0.03)) +
xlab('carat') +
ylab('frequency')
#diamonds$b <- 1
#by(diamonds$b, diamonds$carat, sum)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.01) +
scale_x_continuous(limits = c(0, 1.10), breaks = seq(0, 1.10, 0.1)) +
xlab('carat') +
ylab('frequency')
require(gdata)
df = read.xls(("indicator hiv estimated prevalence% 15-49.xlsx"),sheet = 1, header = TRUE)
install.packages(gdata)
require(gdata)
df = read.xls(("indicator hiv estimated prevalence% 15-49.xlsx"),sheet = 1, header = TRUE)
install.packages(g.data)
require(gdata)
df = read.xls(("indicator hiv estimated prevalence% 15-49.xlsx"),sheet = 1, header = TRUE)
require(gdata)
installXLSXsupport()
View(diamonds)
df = read.csv("indicator hiv estimated prevalence% 15-49.csv")
df = read.csv("indicator hiv estimated prevalence% 15-49.csv", seq(","))
df = read.csv("indicator hiv estimated prevalence% 15-49.csv", seq(","))
df = read.csv("indicator hiv estimated prevalence% 15-49.csv", sep = ',')
View(df)
View(df)
df <- read.csv('indicator hiv estimated prevalence% 15-49.csv', sep = ';')   ## 读取数据
hiv_data <- read.csv('indicator hiv estimated prevalence% 15-49.csv', sep = ';')   ## 读取数据
hiv_data <- read.csv('indicator hiv estimated prevalence% 15-49.csv', sep = ';')   ## 读取数据
names(hiv_data)
hiv_data <- read.csv('indicator_t 15-24 employ.csv', sep = ';')   ## 读取数据
employ <- read.csv('indicator_t 15-24 employ.csv', sep = ';')   ## 读取数据
employ <- read.csv('indicator_t 15-24 employ.csv', sep = ';')   ## 读取数据
summary(employ$X1991)
summary(employ$X1991)
library("ggplot2")
summary(employ$X1991)
library("ggplot2")
qplot(x = X1991, data = employ)
summary(employ$X1991)
library("ggplot2")
qplot(x = X1998, data = employ)
qplot(x = X1998, data = employ, geom = 'boxplot') + coord_cartesian(ylim = c(0, 100))
qplot(y = X1998, data = employ, geom = 'boxplot') + coord_cartesian(ylim = c(0, 100))
qplot(x = X1998, data = employ, geom = 'boxplot') + coord_cartesian(xlim = c(0, 100))
qplot(x = X1998, data = employ, geom = 'boxplot')
qplot(x = X1998, y = X1998, data = employ, geom = 'boxplot')
qplot(x = X1998, y = X1998, data = employ, geom = 'boxplot')
summary(employ$X1998)
names(employ)
ggplot(aes(x = Total.15.24.employment.to.population....), data = employ) +
geom_freqpoly(binwidth=1) +
scale_x_continuous(limits = c(0, 1.10), breaks = seq(0, 1.10, 0.1)) +
xlab('carat') +
ylab('frequency')
X1998x <- employ[35, ]
ggplot(aes(x = Total.15.24.employment.to.population....), data = employ) +
geom_freqpoly(binwidth=1) +
scale_x_continuous(limits = c(0, 1.10), breaks = seq(0, 1.10, 0.1)) +
xlab('carat') +
ylab('frequency')
X1998x <- employ[35, ]
ggplot(aes(x = X1998x), data = X1998x) +
geom_freqpoly(binwidth=1) +
scale_x_continuous(limits = c(0, 1.10), breaks = seq(0, 1.10, 0.1)) +
xlab('carat') +
ylab('frequency')
X1998x <- employ[35, ]
new_1998 <- as.data.frame(t(X1998x))
ggplot(aes(x = X1998x), data = X1998x) +
geom_freqpoly(binwidth=1) +
scale_x_continuous(limits = c(0, 1.10), breaks = seq(0, 1.10, 0.1)) +
xlab('carat') +
ylab('frequency')
View(new_1998)
X1998x <- employ[35, ]
new_1998 <- as.data.frame(t(X1998x))
ggplot(aes(x = Total.15.24.employment.to.population....), data = X1998x) +
geom_freqpoly(binwidth=1) +
scale_x_continuous(limits = c(0, 1.10), breaks = seq(0, 1.10, 0.1)) +
xlab('carat') +
ylab('frequency')
X1998x <- employ[35, ]
new_1998 <- as.data.frame(t(X1998x))
ggplot(aes(x = Total.15.24.employment.to.population....), data = X1998x) +
geom_freqpoly(binwidth=1) +
scale_x_continuous(limits = c(30, 45), breaks = seq(30, 45, 1)) +
xlab('carat') +
ylab('frequency')
employ <- read.csv('indicator_t 15-24 employ.csv', sep = ';')   ## 读取数据
names(employ)
summary(employ$X1991)
library("ggplot2")
qplot(x = X1998, data = employ)
qplot(x = X1998, y = X1998, data = employ, geom = 'boxplot')
summary(employ$X1998)
X1998x <- employ[34, ]
new_1998 <- as.data.frame(t(X1998x))
plot(employ_percent, new)
View(new_1998)
View(X1998x)
X1998x <- employ[34, ]
new_1998 <- as.data.frame(t(X1998x))
plot(new_1998$employ_percent, new_1998$china, type = "?")
X1998x <- employ[34, ]
new_1998 <- as.data.frame(t(X1998x))
plot(new_1998$employ_percent, new_1998$china, xlim = c(30,45), ylim = c(0,50), lwd = 2, type = "?")
X1998x <- employ[34, ]
new_1998 <- as.data.frame(t(X1998x))
ggplot(new_1998, aes(x = employ_percent, y = China)) +
geom_line()
X1998x <- employ[34, ]
new_1998 <- as.data.frame(t(X1998x))
new_employ <- as.data.frame(t(employ))
ggplot(new_1998, aes(x = employ_percent, y = China)) +
geom_line()
View(new_employ)
row.names(employ) <- employ$employ_percent
X1998x <- employ[34, ]
new_1998 <- as.data.frame(t(X1998x))
new_employ <- as.data.frame(t(employ))
ggplot(new_1998, aes(x = employ_percent, y = China)) +
geom_line()
View(employ)
View(new_1998)
View(new_employ)
employ <- read.csv('indicator_t 15-24 employ.csv', sep = ';')   ## 读取数据
names(employ)
summary(employ$X1991)
library("ggplot2")
qplot(x = X1998, data = employ)
qplot(x = X1998, y = X1998, data = employ, geom = 'boxplot')
summary(employ$X1998)
employ <- read.csv('indicator_t 15-24 employ.csv', sep = ';')   ## 读取数据
names(employ)
summary(employ$X1991)
library("ggplot2")
qplot(x = X1998, data = employ)
qplot(x = X1998, y = X1998, data = employ, geom = 'boxplot')
summary(employ$X1998)
View(employ)
ggplot(employ, aes(x = employ_percent, y = X1998)) +
geom_line()
ggplot(employ, aes(x = X1998, y = X1998)) +
geom_line()
employ$x-ais <- nrow()
employ$x-ais <- nrow(employ$employ_percent)
employ$x_ais <- nrow(employ$employ_percent)
ggplot(employ, aes(x = X1998, y = X1998)) +
geom_line()
View(employ)
employ$x <- nrow(employ$employ_percent)
ggplot(employ, aes(x = X1998, y = X1998)) +
geom_line()
employ$x <- nrow(employ$employ_percent)
ggplot(employ, aes(x = x, y = X1998)) +
geom_line()
employ$xy <- nrow(employ$employ_percent)
ggplot(employ, aes(x = xy, y = X1998)) +
geom_line()
employ$xy = nrow(employ$employ_percent)
ggplot(employ, aes(x = xy, y = X1998)) +
geom_line()
employ$xy = [1,178]
employ$xy = nrow(employ)
ggplot(employ, aes(x = xy, y = X1998)) +
geom_line()
employ$xy = row(employ)
ggplot(employ, aes(x = xy, y = X1998)) +
geom_line()
View(employ)
employ$xy = row(employ)
ggplot(employ, aes(x = xy, y = X1998)) +
geom_line()
employ$xy = row(employ)
ggplot(aes(x = xy, y = X1998), data = employ) +
geom_line()
employ$xy = row(employ)
qplot(x = xy, y = X1998, data = employ) +
geom_line()
employ$xy <- row(employ)
employ$xy <- factor(employ$xy)
employ$xy <- int[1:178]
employ$xy <- c[1:178]
employ$xy <- c(1:178)
employ$xy <- factor(employ$xy)
qplot(x = xy, y = X1998, data = employ) +
geom_line()
View(employ)
employ$xy <- c(1:178)
employ$xy <- factor(employ$xy)
qplot(x = xy, y = X1998, data = employ) +
scale_x_continuous(limits = c(0, 200), breaks = seq(0, 200, 20)) +
geom_line()
employ$xy <- c(1:178)
employ$xy <- factor(employ$xy)
ggplot(aes(x = xy, y = X1998) , data = employ$X1998) +
scale_x_continuous(limits = c(0, 200), breaks = seq(0, 200, 20)) +
geom_line()
employ$xy <- c(1:178)
employ$xy <- factor(employ$xy)
ggplot(aes(x = xy, y = X1998) , data = employ$X1998) +
geom_line()
employ$xy <- c(1:178)
employ$xy <- factor(employ$xy)
qplot(x = xy, y = X1998 , data = employ$X1998) +
geom_line()
employ$xy <- c(1:178)
employ$xy <- factor(employ$xy)
qplot(x = xy, y = X1998 , data = employ) +
geom_line()
employ$xy <- c(1:178)/10
employ$xy <- factor(employ$xy)
qplot(x = xy, y = X1998 , data = employ) +
geom_line()
employ$xy <- c(1:178)/10.0
employ$xy <- factor(employ$xy)
qplot(x = xy, y = X1998 , data = employ) +
geom_line()
View(employ)
employ$xy <- c(1:178)/10.0
employ$xy <- factor(employ$xy)
qplot(x = xy, y = X1998 , data = employ) +
geom_line() +
scale_x_continuous(breaks = seq(0, 20, 1), lim = c(0,20))
employ$xy <- c(1:178)/10.0
employ$xy <- factor(employ$xy)
qplot(x = xy, y = X1998 , data = employ) +
geom_line() +
employ$xy <- c(1:178)/10.0
employ$xy <- factor(employ$xy)
qplot(x = xy, y = X1998 , data = employ) +
geom_line()
