getwd
getwd()
ls
list.files()
list()
list.dirs()
setwd(/Users/baoli/Desktop/data-analysis-course/P4/EDA_Course_Materials/lesson3)
setwd("/Users/baoli/Desktop/data-analysis-course/P4/EDA_Course_Materials/lesson3")
getwd()
list.files()
getwd()    ##查看目录
list.files()  ## 查看目录下面所有的文件
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')   ## 读取数据
names(pf)   ##查看数据里面的变量
qplot(x = friend_count, data = pf)
qplot(x = friend_count, data = pf)
getwd()    ##查看目录
list.files()  ## 查看目录下面所有的文件
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')   ## 读取数据
names(pf)   ##查看数据里面的变量
names(pf)
qplot(x = dob_day, data = pf)
getwd()    ##查看目录
list.files()  ## 查看目录下面所有的文件
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')   ## 读取数据
names(pf)   ##查看数据里面的变量
names(pf)
qplot(x = dob_day, data = pf)
qplot(x = dob_day, data = pf) + scale_x_continuous(breaks = 1:31)
getwd()    ##查看目录
list.files()  ## 查看目录下面所有的文件
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')   ## 读取数据
names(pf)   ##查看数据里面的变量
install.packages('ggplot2')
library(ggplot2)
names(pf)
qplot(x = dob_day, data = pf)
qplot(x = dob_day, data = pf) + scale_x_continuous(breaks = 1:31)
qplot(x = friend_count, data = pf)
qplot(x = friend_count, data = pf)
summary(pf$friend_count)
summary(log10(pf$friend_count + 1))
summary(sqrt(pf$friend_count))
qplot(x = friend_count, data = pf)
install.packages('gridExtra')
library(gridExtra)
summary(pf$friend_count)
summary(log10(pf$friend_count + 1))
summary(sqrt(pf$friend_count))
p1 = qplot(x = friend_count, data = pf)
p2 = summary(pf$friend_count)
summary(log10(pf$friend_count + 1))
summary(sqrt(pf$friend_count))
p1 = qplot(x = friend_count, data = pf)
summary(pf$friend_count)
summary(log10(pf$friend_count + 1))
summary(sqrt(pf$friend_count))
x1 = summary(pf$friend_count)
x2 = summary(log10(pf$friend_count + 1))
x3 = summary(sqrt(pf$friend_count))
p1 = qplot(x = x1, data = pf)
p2 = qplot(x = x2, data = pf)
p3 = qplot(x = x3, data = pf)
grid.arrange(p1,p2,p3, ncol=3)
x1 = summary(pf$friend_count)
x2 = summary(log10(pf$friend_count + 1))
x3 = summary(sqrt(pf$friend_count))
p1 = qplot(x = x1, data = pf)
p2 = qplot(x = x2, data = pf)
p3 = qplot(x = x3, data = pf)
grid(p1,p2,p3, ncol=3)
x1 = summary(pf$friend_count)
x2 = summary(log10(pf$friend_count + 1))
x3 = summary(sqrt(pf$friend_count))
p1 = qplot(x = x1, data = pf)
p2 = qplot(x = x2, data = pf)
p3 = qplot(x = x3, data = pf)
grid(p1,p2,p3)
x1 = summary(pf$friend_count)
x2 = summary(log10(pf$friend_count + 1))
x3 = summary(sqrt(pf$friend_count))
p1 = qplot(x = x1, data = pf)
p2 = qplot(x = x2, data = pf)
p3 = qplot(x = x3, data = pf)
grid.arrange(p1,p2,p3)
x1 = summary(pf$friend_count)
x2 = summary(log10(pf$friend_count + 1))
x3 = summary(sqrt(pf$friend_count))
p1 = qplot(x = x1, data = pf)
p2 = qplot(x = x2, data = pf)
p3 = qplot(x = x3, data = pf)
grid.arrange(p1,p2,p3, ncol = 1)
x1 = summary(pf$friend_count)
x2 = summary(log10(pf$friend_count + 1))
x3 = summary(sqrt(pf$friend_count))
p1 = qplot(x = x1, data = pf)
p2 = qplot(x = x2, data = pf)
p3 = qplot(x = x3, data = pf)
grid.arrange(p1,p2,p3, ncol = 3)
x1 = summary(pf$friend_count)
x2 = summary(log10(pf$friend_count + 1))
x3 = summary(sqrt(pf$friend_count))
p1 = qplot(x = x1, data = pf)
p2 = qplot(x = x2, data = pf)
p3 = qplot(x = x3, data = pf)
p1
x1 = summary(pf$friend_count)
x2 = summary(log10(pf$friend_count + 1))
x3 = summary(sqrt(pf$friend_count))
p1 = qplot(pf$friend_count)
p2 = qplot(x = x2, data = pf)
p3 = qplot(x = x3, data = pf)
p1
x1 = summary(pf$friend_count)
x2 = summary(log10(pf$friend_count + 1))
x3 = summary(sqrt(pf$friend_count))
p1 = qplot(pf$friend_count)
p2 = qplot(log10(pf$friend_count + 1))
p3 = qplot(sqrt(pf$friend_count))
p1
x1 = summary(pf$friend_count)
x2 = summary(log10(pf$friend_count + 1))
x3 = summary(sqrt(pf$friend_count))
p1 = qplot(pf$friend_count)
p2 = qplot(log10(pf$friend_count + 1))
p3 = qplot(sqrt(pf$friend_count))
grid.arrange(p1,p2,p3)
x1 = summary(pf$friend_count)
x2 = summary(log10(pf$friend_count + 1))
x3 = summary(sqrt(pf$friend_count))
p1 = qplot(pf$friend_count)
p2 = qplot(log10(pf$friend_count + 1))
p3 = qplot(sqrt(pf$friend_count))
grid.arrange(p1,p2,p3,ncol=2)
summary(pf$friend_count)
summary(log10(pf$friend_count + 1))
summary(sqrt(pf$friend_count))
#将原图与转换过的图放在一起比较
p1 = qplot(pf$friend_count)
p2 = qplot(log10(pf$friend_count + 1))
p3 = qplot(sqrt(pf$friend_count))
grid.arrange(p1,p2,p3,ncol=1)
grid.arrange(p1,p2,p3,ncol=1)
summary(pf$friend_count)
summary(log10(pf$friend_count + 1))
summary(sqrt(pf$friend_count))
#将原图与转换过的图放在一起比较
p1 = qplot(pf$friend_count) + geom_histogram()
#p2 = qplot(log10(pf$friend_count + 1))
#p3 = qplot(sqrt(pf$friend_count))
p2 <- p1 + scale_x_log10()
p3 <- p1 + scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=1)
summary(pf$friend_count)
summary(log10(pf$friend_count + 1))
summary(sqrt(pf$friend_count))
#将原图与转换过的图放在一起比较
p1 = qplot(pf$friend_count) + geom_histogram()
#p2 = qplot(log10(pf$friend_count + 1))
#p3 = qplot(sqrt(pf$friend_count))
p2 <- p1 + scale_x_log10()
p3 <- p1 + scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=1)
logScale <- qplot(x=log10(friend_count), data = pf)
countScale <- qqplot(aes(x=friend_count), data=pf) +
geom_histogram() +
scale_x_log10()
logScale <- qplot(x=log10(friend_count), data = pf)
countScale <- qqplot(aes(x=friend_count), data=pf) + geom_histogram() + scale_x_log10()
logScale <- qplot(x=log10(friend_count), data = pf)
countScale <- ggplot(aes(x=friend_count), data=pf) + geom_histogram() + scale_x_log10()
logScale <- qplot(x=log10(friend_count), data = pf)
countScale <- ggplot(aes(x=friend_count), data=pf) +
geom_histogram() +
scale_x_log10()
logScale <- qplot(x=log10(friend_count), data = pf)
countScale <- ggplot(aes(x=friend_count), data=pf) +
geom_histogram() +
scale_x_log10()
grid.arrange(logScale, countScale, ncol=2)
qplot(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender)))
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('好友数量') +
ylab('Percentage of users with that friend count')
ylab('Percentage of users with that friend count')
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
length(www_likes)
length(pf$www_likes)
sum(pf$www_likes)
sum(pf$www_likes) + subset(pf, !is.na(gender))
pf
aggregate(pf$www_likes, by=list(gender = pf$gender), FUN = sum)
# method 1
aggregate(pf$www_likes, by=list(gender = pf$gender), FUN = sum)
# method 2
by(pf$www_likes, pf$gender, sum)
qplot(data = subset(pf, !na(gender)),geom = 'boxplot')
qplot(data = subset(pf, !is.na(gender)),geom = 'boxplot')
qplot(data = subset(pf, !is.na(gender),geom = 'boxplot')
qplot(data = subset(pf, !is.na(gender),geom = 'boxplot'))
qplot(x = gender, y = friend_count,data = subset(pf, !is.na(gender),geom = 'boxplot'))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender),
geom = 'boxplot'))
qplot(x = gender, y = friend_count < 1000,
data = subset(pf, !is.na(gender),
geom = 'boxplot'))
